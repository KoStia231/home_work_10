# Generated by Django 4.2.2 on 2024-10-11 19:04

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('lms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=30, unique=True, verbose_name='имя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='почта')),
                ('phone_number', models.IntegerField(blank=True, null=True, verbose_name='Телефон')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='', verbose_name='аватарка')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='страна')),
                ('new_password', models.CharField(blank=True, max_length=100, null=True, verbose_name='Новый пароль')),
                ('token_auf', models.CharField(blank=True, max_length=255, null=True, verbose_name='Токен')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'permissions': [('manager', 'Может блокировать пользователей сервиса')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PayMent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_payment', models.DateField(auto_now_add=True, verbose_name='дата оплаты')),
                ('method_payment', models.CharField(choices=[('C', 'наличные'), ('B', 'перевод')], max_length=1, verbose_name='метод оплаты')),
                ('sum_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='сумма оплаты')),
                ('status_payment', models.CharField(choices=[('P', 'оплачен'), ('N', 'не оплачен')], default='N', max_length=1, verbose_name='статус оплаты')),
                ('course', models.ManyToManyField(to='lms.course', verbose_name='Оплаченные курсы')),
                ('lesson', models.ManyToManyField(to='lms.lesson', verbose_name='Оплаченные уроки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
            ],
            options={
                'verbose_name': 'оплата',
                'verbose_name_plural': 'оплаты',
            },
        ),
    ]
